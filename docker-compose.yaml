version: '3.8'
services:
# MySQL database custom images
  db:
    build:
      context: ./db
    image: mysql:${DB_IMG_VER}
    container_name: ${DB_IMG_VER}
    env_file: .env
    environment:
      TZ: 'Europe/Kiev'
      MYSQL_ROOT_PASSWORD: ${REDMINE_DB_PASSWORD}
      MYSQL_DATABASE: ${REDMINE_DB_NAME}
    volumes:
      - ./db/data/mysql_data:${DB_DATA}
      - ./db/mysql_config/my.cnf:${DB_CONFIG}
      - ./db/backup:/media/backup
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", -hdb, -u$REDMINE_DB_USER, -p$REDMINE_DB_PASSWORD]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - redmine-network
    restart: always
# Redmine custom images
  app:
    build:
      context: ./app
    image: redmine:${REDMINE_IMG_VER}
    container_name: ${REDMINE_IMG_VER}
    env_file: .env
    ports:
      - 80:3000
    volumes:
      - ./app/redmine_plugins:${REDMINE_PLUGINS}
      - ./app/redmine_themes:${REDMINE_THEMES}
      - ./app/data/redmine_data:${REDMINE_DATA}
      - ./app/data/redmine_logs:${REDMINE_LOGS}
      - ./app/redmine_config/configuration.yml:${REDMINE_CONFIG}
      - ./app/redmine_config/additional_environment.rb:${REDMINE_LOG_CONFIG}
    environment:
      TZ: 'Europe/Kiev'
      REDMINE_DB_MYSQL: db
      REDMINE_DB_DATABASE: ${REDMINE_DB_NAME}
      REDMINE_DB_USERNAME: ${REDMINE_DB_USER}
      REDMINE_DB_PASSWORD: ${REDMINE_DB_PASSWORD}
      #REDMINE_NO_DB_MIGRATE: true
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - redmine-network
    restart: always

networks:
  redmine-network:
    driver: bridge
